/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package booklink.gui;

import booklink.MainFrame;
import booklink.controller.PDFController;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Kerstin Miethanner
 */
public class jpAddPDF extends jpShowPDF {
    //MainFrame myparent;
    /**
     * Creates new form jpAddPDF
     */
    public jpAddPDF() {
        //this.myparent = parent;
        // Chris: Wir benutzen die Components von jpShowPDF, daher macht
        // es keinen Sinn, die lokalen Componenten zu erzeugen
        //initComponents();
        
    }

    @Override
    public void initPanel(MainFrame myparent) {
        super.initPanel(myparent);
        // Chris: Panel wurde geladen, jetzt den Dialog zum Auswählen der PDFs erzeugen
        addPdf();
    }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 613, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 319, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * 
     */
    private void addPdf() {
        try {
            JFileChooser chooser = new JFileChooser();  // Neuen JFC erzeugen
            chooser.setMultiSelectionEnabled(true); // Mehrfachselektion von Dateien erlauben
            FileFilter filter = new FileNameExtensionFilter("PDF Dateien", "pdf"); // File-Filter erzeugen (nur PDFs)
            chooser.setFileFilter(filter); // Den FileFilter zu dem JFC hinzufügen
            int returnVal = chooser.showOpenDialog(chooser);

            // Abfrage, ob auf Öffnen geklickt wurde
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                // Chris: Massiv umgebaut. Geht jetzt über Model & Co.
                try {
                    PDFController ctl = PDFController.getInstance();
                    ctl.addNewPDF(chooser.getSelectedFiles(), myparent.getID());
                } catch (Exception e) {
                    myparent.setStatusMessage("Fehler beim PDF Anlegen.", MainFrame.ERROR_MESSAGE);
                }
                super.populateList(myparent.getID());
                
            } else {
                super.populateList(myparent.getID());
            }
        } catch (Exception e) {
            
            myparent.setStatusMessage("Fehler beim Anlegen von PDFs", MainFrame.ERROR_MESSAGE);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
